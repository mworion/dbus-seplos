############################################################
# -*- coding: utf-8 -*-
#
#  o-o   o--o  o   o  o-o
#  |  \  |   | |   | |
#  |   O O--o  |   |  o-o
#  |  /  |   | |   |     |
#  o-o   o--o   o-o  o--o
#
#
#   o-o  o--o o--o  o     o-o   o-o
#  |     |    |   | |    o   o |
#   o-o  O-o  O--o  |    |   |  o-o
#      | |    |     |    o   o     |
#  o--o  o--o o     O---o o-o  o--o
#
# python-based service for victron cerbo > v3.00
#
# (c) 2024 by mworion
# Licence MIT
#
###########################################################

import os
import subprocess
from seplos_utils import logger


def get_CPU_load():
    """
    :return:
    """
    pid = os.getpid()
    command_string = f'top -n 1 -b | grep {pid}'

    p = subprocess.Popen(command_string, stdout=subprocess.PIPE, shell=True)
    try:
        out, _ = p.communicate(timeout=1)
    except subprocess.TimeoutExpired:
        logger.error(f'CPU reading for pid {pid} failed')
        return None

    logger.info(f'CPU reading for pid {pid}: {out}')

    if not out:
        return None

    out = out.decode()
    rows = out.split()
    if len(rows) < 6:
        return None

    cpu_load_percent = int(rows[6].replace('%', ''))
    logger.info(f'CPU load for pid {pid}: {cpu_load_percent}%')
    return cpu_load_percent
